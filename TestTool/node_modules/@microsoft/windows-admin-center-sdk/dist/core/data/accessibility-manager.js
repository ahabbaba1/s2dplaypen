import { Dom } from '../dom/dom';
/**
 * Class for accessibility manager
 */
var AccessibilityManager = /** @class */ (function () {
    function AccessibilityManager() {
        /**
         * Indicates that body focus class handlers have already been setup and should not be setup again
         */
        this.hiddenFocusHandlersInitialized = false;
        /**
         * The set of events for element focusing.
         */
        this.elementFocusingEvents = [];
        /**
         * The CSS class to disable the focus rectangle even in keyboard mode
         */
        this.hiddenFocusClass = 'sme-hidden-focus';
        /**
         * The CSS class to enable mouse specific accessibility styles
         */
        this.mouseNavigationModeClass = 'sme-accessibility-mode-mouse';
        /**
         * The CSS class to enable keyboard specific accessibility styles
         */
        this.keyboardNavigationModeClass = 'sme-accessibility-mode-keyboard';
        /**
         * The set of elements that have had the hiddenFocusClass applied
         */
        this.hiddenFocusElements = [];
        // hookup global handlers
        this.hookupGlobalHandlers();
    }
    /**
     * Registers the event handler for ElementFocusingEvent
     */
    AccessibilityManager.prototype.registerElementFocusingEvent = function (handler) {
        var _this = this;
        var unregisterEventFunction = function () {
            var index = _this.elementFocusingEvents.indexOf(handler);
            if (index !== -1) {
                _this.elementFocusingEvents.splice(index, 1);
            }
        };
        this.elementFocusingEvents.push(handler);
        return unregisterEventFunction;
    };
    /**
     * focus on given element and prevent the default of the event
     * @param element the element to focus on
     * @param event the event that triggered the focus
     * @param allowBrowserFocusHandling it indicates whether to allow browser to handle focus.
     */
    AccessibilityManager.prototype.focusOnElement = function (element, event, allowBrowserFocusHandling) {
        if (element) {
            element.focus();
            if (!allowBrowserFocusHandling) {
                event.preventDefault();
            }
        }
    };
    /**
     * Handlers the element focusing in either the default way or custom ways based on ElementFocusingEvent handler.
     */
    AccessibilityManager.prototype.processElementFocusing = function (event, elementToFocus, sourceZone, targetZone, allowBrowserFocusHandling) {
        var useCustomFocusHandling = false;
        var preventDefaultEvent = false;
        this.elementFocusingEvents.forEach(function (focusEvent) {
            focusEvent({
                nativeEvent: event,
                sourceZone: sourceZone,
                targetZone: targetZone,
                targetElement: elementToFocus,
                preventDefaultFocusBehavior: function () {
                    useCustomFocusHandling = true;
                },
                preventDefaultEvent: function () {
                    preventDefaultEvent = true;
                }
            });
        });
        if (useCustomFocusHandling) {
            if (preventDefaultEvent) {
                event.stopPropagation();
                event.preventDefault();
            }
        }
        else {
            this.focusOnElement(elementToFocus, event, allowBrowserFocusHandling);
        }
    };
    /**
     * click on given element and prevent the default of the event
     * @param element the element to click
     * @param event the event that triggered the click
     */
    AccessibilityManager.prototype.clickOnElement = function (element, event) {
        if (element) {
            element.click();
            event.preventDefault();
        }
    };
    /**
     * Changes the Accessibility Mode to mouse or keyboard
     * @param keyboardMode indicates that keyboard mode should be set
     */
    AccessibilityManager.prototype.changeAccessibilityMode = function (keyboardMode) {
        // toggle accessibility mode across all iframes in the document
        // only works for same origin iframes
        // TODO: support cross origin iframes and replace this with RPC broadcasting to all iframes
        var allBodys = Dom.getAllBodys();
        for (var i = 0; i < allBodys.length; i++) {
            var currentBody = allBodys[i];
            currentBody.classList.toggle(this.mouseNavigationModeClass, !keyboardMode);
            currentBody.classList.toggle(this.keyboardNavigationModeClass, keyboardMode);
        }
        // register accessibility mode with self so RPC can use it
        var self = MsftSme.self();
        self.Resources.accessibilityMode = keyboardMode;
    };
    /**
     * Hooks up the global event handlers
     */
    AccessibilityManager.prototype.hookupGlobalHandlers = function () {
        var _this = this;
        // hookup body focus class handlers.
        // We do not need to unhook these as they last the entire applications lifecycle.
        if (!this.hiddenFocusHandlersInitialized) {
            // ensure this is only called once
            this.hiddenFocusHandlersInitialized = true;
            // apply the mouse navigation class to the body of the document as default
            this.changeAccessibilityMode(false);
            // when the user clicks on the page, we need to exit keyboard mode and enter mouse mode again
            document.body.addEventListener('mousedown', function (event) {
                _this.changeAccessibilityMode(false);
                setTimeout(function () { return Dom.checkActiveTab(); }, 0);
            });
            document.body.addEventListener('keydown', function (event) {
                var isKeyboardMode = MsftSme.self().Resources.accessibilityMode;
                var currentElement = event.target;
                var currentTrap = Dom.getAncestorTrap(currentElement);
                var currentForm = Dom.getAncestorForm(currentElement);
                var keyCode = event.keyCode;
                setTimeout(function () { return Dom.checkActiveTab(); }, 0);
                if (event.shiftKey && keyCode === KeyCode.Tab) {
                    // current element in a trap, shift-tab should go to previous focusable element
                    if (currentTrap) {
                        _this.focusOnElement(Dom.getPreviousFocusableElementInTrap(currentElement), event);
                    }
                    else {
                        var focusOn = Dom.getPreviousFocusableElement(currentElement);
                        // if we are in a form, use shift tab to navigate through form
                        // unless we are at the beginning of the form
                        if (currentForm && focusOn !== currentElement) {
                            _this.focusOnElement(focusOn, event);
                        }
                        else {
                            // shift tab - go back to previous zone
                            focusOn = Dom.getPreviousZoneElement(currentElement);
                            var currentZone = Dom.getAncestorZone(currentElement);
                            var targetZone = Dom.getAncestorZone(focusOn);
                            if (focusOn !== currentElement) {
                                _this.processElementFocusing(event, focusOn, currentZone, targetZone);
                            }
                            // else we are at the beginning of the page and want shift tab to perform its default action
                        }
                    }
                }
                else if (keyCode === KeyCode.Tab) {
                    // when the user presses 'tab' we will enter keyboard mode
                    _this.changeAccessibilityMode(true);
                    // current element in a trap, tab should go to next focusable element
                    if (currentTrap) {
                        _this.focusOnElement(Dom.getNextFocusableElementInTrap(currentElement), event);
                    }
                    else {
                        var focusOn = Dom.getNextFocusableElement(currentElement);
                        // if we are in a form, use tab to navigate through form
                        // unless we are at the end of the form
                        if (currentForm && focusOn !== currentElement) {
                            _this.focusOnElement(focusOn, event);
                        }
                        else {
                            var currentZone = Dom.getAncestorZone(currentElement);
                            var nextElement = Dom.getNextFocusableElement(currentElement);
                            focusOn = Dom.getNextZoneElement(currentElement);
                            var targetZone = Dom.getAncestorZone(focusOn);
                            // Check and move to next element
                            if (currentZone && currentZone.tagName === 'FORM' && currentElement !== nextElement) {
                                _this.focusOnElement(nextElement, event);
                            }
                            else if (focusOn && targetZone !== currentZone) {
                                // go to next zone
                                _this.processElementFocusing(event, focusOn, currentZone, targetZone);
                            }
                            else {
                                // else we are at the end of the page and want tab to perform its default action
                                var lastElement = Dom.getLastElementInZone(currentElement);
                                if (lastElement) {
                                    _this.processElementFocusing(event, lastElement, currentZone, targetZone, true);
                                }
                            }
                        }
                    }
                }
                else if (keyCode === KeyCode.RightArrow && !currentTrap && !currentForm) {
                    // use default if the cursor is in the middle of search box text
                    var useArrowKeys = Dom.useArrowKeysWithinSearchbox(currentElement, true);
                    if (!useArrowKeys && isKeyboardMode) {
                        // go to next focusable element within current zone
                        _this.focusOnElement(Dom.getNextFocusableElement(currentElement), event);
                    }
                }
                else if (keyCode === KeyCode.DownArrow && !currentTrap && !currentForm) {
                    // go to next focusable element within current zone
                    _this.focusOnElement(Dom.getNextFocusableElement(currentElement), event);
                }
                else if (keyCode === KeyCode.UpArrow && !currentTrap && !currentForm) {
                    // go to previous focusable element within current zone
                    _this.focusOnElement(Dom.getPreviousFocusableElement(currentElement), event);
                }
                else if (event.keyCode === KeyCode.LeftArrow && !currentTrap && !currentForm) {
                    // use default if the cursor is in the middle of search box text
                    var useArrowKeys = Dom.useArrowKeysWithinSearchbox(currentElement, false);
                    if (!useArrowKeys && isKeyboardMode) {
                        // go to previous focusable element within current zone
                        _this.focusOnElement(Dom.getPreviousFocusableElement(currentElement), event);
                    }
                }
                else if (event.keyCode === KeyCode.Enter) {
                    if (document.body.classList.contains(_this.keyboardNavigationModeClass)) {
                        var ancestorZone = Dom.getAncestorZone(currentElement);
                        if (ancestorZone && (ancestorZone.tagName !== 'FORM' || Dom.shouldTreatEnterAsClick(currentElement))) {
                            _this.clickOnElement(currentElement, event);
                        }
                    }
                }
                else if (event.keyCode === KeyCode.End && !Dom.isSearchBox(currentElement) && !currentForm) {
                    _this.focusOnElement(Dom.getLastElementInZone(currentElement), event);
                }
                else if (event.keyCode === KeyCode.Home && !Dom.isSearchBox(currentElement) && !currentForm) {
                    _this.focusOnElement(Dom.getFirstElementInZone(currentElement), event);
                }
                else if (event.keyCode === KeyCode.A && event.ctrlKey && event.altKey) {
                    var targetElement = void 0;
                    if (Dom.isInActionBar(currentElement)) {
                        targetElement = Dom.getNextActionBar(currentElement);
                    }
                    else {
                        targetElement = Dom.getFirstActionBar(currentElement);
                    }
                    if (!MsftSme.isNullOrUndefined(targetElement)) {
                        _this.changeAccessibilityMode(true);
                        _this.focusOnElement(targetElement, event, false);
                    }
                }
            });
        }
    };
    return AccessibilityManager;
}());
export { AccessibilityManager };
// Keyboard codes
export var KeyCode;
(function (KeyCode) {
    KeyCode[KeyCode["Backspace"] = 8] = "Backspace";
    KeyCode[KeyCode["Tab"] = 9] = "Tab";
    KeyCode[KeyCode["Enter"] = 13] = "Enter";
    KeyCode[KeyCode["Shift"] = 16] = "Shift";
    KeyCode[KeyCode["Ctrl"] = 17] = "Ctrl";
    KeyCode[KeyCode["Alt"] = 18] = "Alt";
    KeyCode[KeyCode["Pause"] = 19] = "Pause";
    KeyCode[KeyCode["CapsLock"] = 20] = "CapsLock";
    KeyCode[KeyCode["Escape"] = 27] = "Escape";
    KeyCode[KeyCode["Space"] = 32] = "Space";
    KeyCode[KeyCode["PageUp"] = 33] = "PageUp";
    KeyCode[KeyCode["PageDown"] = 34] = "PageDown";
    KeyCode[KeyCode["End"] = 35] = "End";
    KeyCode[KeyCode["Home"] = 36] = "Home";
    KeyCode[KeyCode["LeftArrow"] = 37] = "LeftArrow";
    KeyCode[KeyCode["UpArrow"] = 38] = "UpArrow";
    KeyCode[KeyCode["RightArrow"] = 39] = "RightArrow";
    KeyCode[KeyCode["DownArrow"] = 40] = "DownArrow";
    KeyCode[KeyCode["Insert"] = 45] = "Insert";
    KeyCode[KeyCode["Delete"] = 46] = "Delete";
    KeyCode[KeyCode["Num0"] = 48] = "Num0";
    KeyCode[KeyCode["Num1"] = 49] = "Num1";
    KeyCode[KeyCode["Num2"] = 50] = "Num2";
    KeyCode[KeyCode["Num3"] = 51] = "Num3";
    KeyCode[KeyCode["Num4"] = 52] = "Num4";
    KeyCode[KeyCode["Num5"] = 53] = "Num5";
    KeyCode[KeyCode["Num6"] = 54] = "Num6";
    KeyCode[KeyCode["Num7"] = 55] = "Num7";
    KeyCode[KeyCode["Num8"] = 56] = "Num8";
    KeyCode[KeyCode["Num9"] = 57] = "Num9";
    KeyCode[KeyCode["A"] = 65] = "A";
    KeyCode[KeyCode["B"] = 66] = "B";
    KeyCode[KeyCode["C"] = 67] = "C";
    KeyCode[KeyCode["D"] = 68] = "D";
    KeyCode[KeyCode["E"] = 69] = "E";
    KeyCode[KeyCode["F"] = 70] = "F";
    KeyCode[KeyCode["G"] = 71] = "G";
    KeyCode[KeyCode["H"] = 72] = "H";
    KeyCode[KeyCode["I"] = 73] = "I";
    KeyCode[KeyCode["J"] = 74] = "J";
    KeyCode[KeyCode["K"] = 75] = "K";
    KeyCode[KeyCode["L"] = 76] = "L";
    KeyCode[KeyCode["M"] = 77] = "M";
    KeyCode[KeyCode["N"] = 78] = "N";
    KeyCode[KeyCode["O"] = 79] = "O";
    KeyCode[KeyCode["P"] = 80] = "P";
    KeyCode[KeyCode["Q"] = 81] = "Q";
    KeyCode[KeyCode["R"] = 82] = "R";
    KeyCode[KeyCode["S"] = 83] = "S";
    KeyCode[KeyCode["T"] = 84] = "T";
    KeyCode[KeyCode["U"] = 85] = "U";
    KeyCode[KeyCode["V"] = 86] = "V";
    KeyCode[KeyCode["W"] = 87] = "W";
    KeyCode[KeyCode["X"] = 88] = "X";
    KeyCode[KeyCode["Y"] = 89] = "Y";
    KeyCode[KeyCode["Z"] = 90] = "Z";
    KeyCode[KeyCode["LeftWindows"] = 91] = "LeftWindows";
    KeyCode[KeyCode["RightWindows"] = 92] = "RightWindows";
    KeyCode[KeyCode["Select"] = 93] = "Select";
    KeyCode[KeyCode["Numpad0"] = 96] = "Numpad0";
    KeyCode[KeyCode["Numpad1"] = 97] = "Numpad1";
    KeyCode[KeyCode["Numpad2"] = 98] = "Numpad2";
    KeyCode[KeyCode["Numpad3"] = 99] = "Numpad3";
    KeyCode[KeyCode["Numpad4"] = 100] = "Numpad4";
    KeyCode[KeyCode["Numpad5"] = 101] = "Numpad5";
    KeyCode[KeyCode["Numpad6"] = 102] = "Numpad6";
    KeyCode[KeyCode["Numpad7"] = 103] = "Numpad7";
    KeyCode[KeyCode["Numpad8"] = 104] = "Numpad8";
    KeyCode[KeyCode["Numpad9"] = 105] = "Numpad9";
    KeyCode[KeyCode["Multiply"] = 106] = "Multiply";
    KeyCode[KeyCode["Add"] = 107] = "Add";
    KeyCode[KeyCode["Subtract"] = 109] = "Subtract";
    KeyCode[KeyCode["DecimaPoint"] = 110] = "DecimaPoint";
    KeyCode[KeyCode["Divide"] = 111] = "Divide";
    KeyCode[KeyCode["F1"] = 112] = "F1";
    KeyCode[KeyCode["F2"] = 113] = "F2";
    KeyCode[KeyCode["F3"] = 114] = "F3";
    KeyCode[KeyCode["F4"] = 115] = "F4";
    KeyCode[KeyCode["F5"] = 116] = "F5";
    KeyCode[KeyCode["F6"] = 117] = "F6";
    KeyCode[KeyCode["F7"] = 118] = "F7";
    KeyCode[KeyCode["F8"] = 119] = "F8";
    KeyCode[KeyCode["F9"] = 120] = "F9";
    KeyCode[KeyCode["F10"] = 121] = "F10";
    KeyCode[KeyCode["F11"] = 122] = "F11";
    KeyCode[KeyCode["F12"] = 123] = "F12";
    KeyCode[KeyCode["NumLock"] = 144] = "NumLock";
    KeyCode[KeyCode["ScrollLock"] = 145] = "ScrollLock";
    KeyCode[KeyCode["SemiColon"] = 186] = "SemiColon";
    KeyCode[KeyCode["EqualSign"] = 187] = "EqualSign";
    KeyCode[KeyCode["Comma"] = 188] = "Comma";
    KeyCode[KeyCode["Dash"] = 189] = "Dash";
    KeyCode[KeyCode["Period"] = 190] = "Period";
    KeyCode[KeyCode["ForwardSlash"] = 191] = "ForwardSlash";
    KeyCode[KeyCode["GraveAccent"] = 192] = "GraveAccent";
    KeyCode[KeyCode["OpenBracket"] = 219] = "OpenBracket";
    KeyCode[KeyCode["BackSlash"] = 220] = "BackSlash";
    KeyCode[KeyCode["CloseBraket"] = 221] = "CloseBraket";
    KeyCode[KeyCode["SingleQuote"] = 222] = "SingleQuote";
})(KeyCode || (KeyCode = {}));
//# sourceMappingURL=data:application/json;base64,