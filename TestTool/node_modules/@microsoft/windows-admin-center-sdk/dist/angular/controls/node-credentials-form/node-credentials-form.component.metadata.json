[{"__symbolic":"module","version":3,"metadata":{"NodeCredentialsFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-node-credentials-form","template":"\n      <form name=\"manageAs\" [id]=\"formId\">\n          <sme-form-field type=\"radiogroup\" name=\"authType\" [(ngModel)]=\"useGlobalAuth\" (customValidate)=\"validateAuthType($event)\" [immediateValidation]=\"true\">\n              <sme-option [value]=\"true\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.UseGlobalAuth.labelFormat | smeFormat:(globalUsername || strings.MsftSmeShell.Angular.NodeCredentialsForm.UseGlobalAuth.myAccount)\">\n                  <ng-template>\n                      <sme-form-field *ngIf=\"!isServiceMode\" type=\"checkbox\" name=\"useLaps\" [(ngModel)]=\"useLaps\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.UseLaps.label\"></sme-form-field>\n                      <fieldset *ngIf=\"!isServiceMode\" [disabled]=\"!useLaps\">\n                          <sme-form-field type=\"text\" name=\"lapsLocalAdminName\" [(ngModel)]=\"lapsLocalAdminName\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.lapsLocalAdminName.label\" [placeholder]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.lapsLocalAdminName.placeholder\"></sme-form-field>\n                      </fieldset>\n                  </ng-template>\n              </sme-option>\n              <sme-option [value]=\"false\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.UsePerNodeAuth.label\">\n                  <ng-template>\n                      <sme-form-field type=\"text\" name=\"username\" [(ngModel)]=\"username\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Username.label\" [placeholder]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Username.placeholder\"></sme-form-field>\n                      <sme-form-field type=\"password\" name=\"password\" [(ngModel)]=\"password\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Password.label\" [placeholder]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Password.placeholder\"></sme-form-field>\n                      <sme-form-field *ngIf=\"showApplyToAll\" type=\"checkbox\" name=\"applyToAll\" [(ngModel)]=\"applyToAll\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.ApplyToAll.label\" (customValidate)=\"validateApplyToAll($event)\"></sme-form-field>\n                  </ng-template>\n              </sme-option>\n          </sme-form-field>\n      </form>\n    ","styles":["\n      .info-icon-div {\n        width: 20px;\n        text-align: center;\n        margin-right: 0px;\n        height: 20px;\n        padding-left: 0px;\n      }\n\n      .info-icon {\n        vertical-align: middle;\n        font-size: 20px;\n        height: 20px;\n        line-height: 20px;\n      }\n\n      .indent-list {\n        padding-left: 20px;\n        font-size: 13px;\n      }\n    "]}]}],"members":{"credentialsChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"showApplyToAll":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isServiceMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"formId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../service","name":"AppContextService"}]}],"reset":[{"__symbolic":"method"}],"updateAuthorizationCredentials":[{"__symbolic":"method"}],"validateAuthType":[{"__symbolic":"method"}],"validateApplyToAll":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"NodeCredentialsFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-node-credentials-form","template":"\n      <form name=\"manageAs\" [id]=\"formId\">\n          <sme-form-field type=\"radiogroup\" name=\"authType\" [(ngModel)]=\"useGlobalAuth\" (customValidate)=\"validateAuthType($event)\" [immediateValidation]=\"true\">\n              <sme-option [value]=\"true\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.UseGlobalAuth.labelFormat | smeFormat:(globalUsername || strings.MsftSmeShell.Angular.NodeCredentialsForm.UseGlobalAuth.myAccount)\">\n                  <ng-template>\n                      <sme-form-field *ngIf=\"!isServiceMode\" type=\"checkbox\" name=\"useLaps\" [(ngModel)]=\"useLaps\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.UseLaps.label\"></sme-form-field>\n                      <fieldset *ngIf=\"!isServiceMode\" [disabled]=\"!useLaps\">\n                          <sme-form-field type=\"text\" name=\"lapsLocalAdminName\" [(ngModel)]=\"lapsLocalAdminName\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.lapsLocalAdminName.label\" [placeholder]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.lapsLocalAdminName.placeholder\"></sme-form-field>\n                      </fieldset>\n                  </ng-template>\n              </sme-option>\n              <sme-option [value]=\"false\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.UsePerNodeAuth.label\">\n                  <ng-template>\n                      <sme-form-field type=\"text\" name=\"username\" [(ngModel)]=\"username\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Username.label\" [placeholder]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Username.placeholder\"></sme-form-field>\n                      <sme-form-field type=\"password\" name=\"password\" [(ngModel)]=\"password\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Password.label\" [placeholder]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.Password.placeholder\"></sme-form-field>\n                      <sme-form-field *ngIf=\"showApplyToAll\" type=\"checkbox\" name=\"applyToAll\" [(ngModel)]=\"applyToAll\" [label]=\"strings.MsftSmeShell.Angular.NodeCredentialsForm.ApplyToAll.label\" (customValidate)=\"validateApplyToAll($event)\"></sme-form-field>\n                  </ng-template>\n              </sme-option>\n          </sme-form-field>\n      </form>\n    ","styles":["\n      .info-icon-div {\n        width: 20px;\n        text-align: center;\n        margin-right: 0px;\n        height: 20px;\n        padding-left: 0px;\n      }\n\n      .info-icon {\n        vertical-align: middle;\n        font-size: 20px;\n        height: 20px;\n        line-height: 20px;\n      }\n\n      .indent-list {\n        padding-left: 20px;\n        font-size: 13px;\n      }\n    "]}]}],"members":{"credentialsChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"showApplyToAll":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isServiceMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"formId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../service","name":"AppContextService"}]}],"reset":[{"__symbolic":"method"}],"updateAuthorizationCredentials":[{"__symbolic":"method"}],"validateAuthType":[{"__symbolic":"method"}],"validateApplyToAll":[{"__symbolic":"method"}]}}}}]