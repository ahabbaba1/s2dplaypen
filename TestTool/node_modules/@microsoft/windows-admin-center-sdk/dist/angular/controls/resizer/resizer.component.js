var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, EventEmitter, HostBinding, HostListener, Injector, Input, Output } from '@angular/core';
import { KeyCode, LogLevel } from '../../../core';
import { BaseComponent } from '../common/base.component';
/**
 * Resizer component
 */
var ResizerComponent = /** @class */ (function (_super) {
    __extends(ResizerComponent, _super);
    /**
     * Initializes a new instance of the @see ResizerComponent class.
     * @param {Injector} injector The angular injection service. required by @see SmeInjectable decorator in the @see BaseComponent class
     */
    function ResizerComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.isResizing = false;
        /**
         * It indicates whether to show the half transparent cover ont he resizer host.
         * In some case (like Data Table column resizer), the cover is not needed since data table would handle the UI of resizing by itself.
         */
        _this.showResizerCover = true;
        /**
         * It indicates whether to let the screen reader to read this resizer control.
         * In some case (like Data Table column resizer), we don't want the screen reader to read it as part of the column header.
         */
        _this.visibleToScreenReader = true;
        /**
         * It defines the orientation of the element which holds the resizer in the resizing layout.
         */
        _this.orientation = 'bottom';
        /**
         * It's fired then the resizing is finished.
         */
        _this.resized = new EventEmitter();
        /**
         * It's fired then the resizing is happening.
         */
        _this.resizing = new EventEmitter();
        return _this;
    }
    Object.defineProperty(ResizerComponent.prototype, "alignTop", {
        /**
         * Indicates that the resizer should be aligned to the top
         */
        get: function () {
            return this.isOriented('bottom', 'left', 'right');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "alignBottom", {
        /**
         * Indicates that the resizer should be aligned to the bottom
         */
        get: function () {
            return this.isOriented('top', 'left', 'right');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "alignLeft", {
        /**
         * Indicates that the resizer should be aligned to the left
         */
        get: function () {
            return this.isOriented('top', 'bottom', 'right');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "alignRight", {
        /**
         * Indicates that the resizer should be aligned to the right
         */
        get: function () {
            return this.isOriented('top', 'bottom', 'left');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "isVertical", {
        /**
         * Indicates that the resizer moves vertically
         */
        get: function () {
            return this.isOriented('top', 'bottom');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "isHorizontal", {
        /**
         * Indicates that the resizer moves horizontally
         */
        get: function () {
            return this.isOriented('left', 'right');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "ariaOrientation", {
        /**
         * Describes the orientation for aria users.
         */
        get: function () {
            return this.isVertical ? 'vertical' : 'horizontal';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResizerComponent.prototype, "cursor", {
        /**
         * Defines the cursor style the resizer should have
         */
        get: function () {
            switch (this.orientation) {
                case 'top':
                    return 'n-resize';
                case 'bottom':
                    return 's-resize';
                case 'left':
                    return 'e-resize';
                case 'right':
                    return 'w-resize';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Angular lifecyle hook.
     */
    ResizerComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        // This is a special implementation for Microsoft Edge.
        // In Microsoft Edge, if the resizer div is transparent and it's overlay on the scrollbar,
        // the mouse events will be messed up.
        // So we need to apply a very transparent but not 100% transparent color to it.
        // It won't impact the look and feel, when the browser renders this special color, 
        // basically no color will be actually rendered.
        this.hostElement.nativeElement.style.background = 'rgba(255,255,255,0.003)';
        if (this.visibleToScreenReader) {
            this.setAttribute('role', 'separator');
            this.setAttribute('aria-label', this.strings.MsftSmeShell.Angular.Resizer.Splitter);
        }
        if (!this.resizerHostSelector) {
            this.log('resizerHostSelector is not set.', LogLevel.Warning);
        }
        else {
            var currentParentElement = this.hostElement.nativeElement.parentElement;
            while (!this.resizerHostElement && currentParentElement) {
                this.resizerHostElement = currentParentElement.querySelector(this.resizerHostSelector);
                currentParentElement = currentParentElement.parentElement;
            }
            this.resizerHostBodyElement = document.createElement('DIV');
            this.resizerHostBodyElement.classList.add('resizer-host-body');
            this.resizerHostBodyElement.classList.add('sme-layout-absolute');
            this.resizerHostBodyElement.classList.add('sme-position-inset-none');
            this.resizerHostBodyElement.classList.add('sme-layer-above');
            this.resizerHostBodyElement.classList.add('sme-layout-none');
            this.resizerIndicatorElement = document.createElement('DIV');
            this.resizerIndicatorElement.classList.add('resizer-indicator');
            this.resizerIndicatorElement.classList.add('sme-layout-none');
            this.resizerIndicatorElement.classList.add('sme-layout-absolute');
            this.resizerIndicatorElement.classList.add('sme-layer-over');
            if (this.showResizerCover) {
                this.resizerHostBodyElement.classList.add('sme-background-color-base');
                this.resizerHostBodyElement.style.opacity = '0.5';
                this.resizerIndicatorElement.classList.add('sme-background-color-base-80');
            }
            switch (this.orientation) {
                case 'top':
                    this.resizerHostBodyElement.style.cursor = 'n-resize';
                    this.resizerIndicatorElement.classList.add('sme-position-stretch-h');
                    this.resizerIndicatorElement.classList.add('sme-height-xxs');
                    break;
                case 'bottom':
                    this.resizerHostBodyElement.style.cursor = 's-resize';
                    this.resizerIndicatorElement.classList.add('sme-position-stretch-h');
                    this.resizerIndicatorElement.classList.add('sme-height-xxs');
                    break;
                case 'left':
                    this.resizerHostBodyElement.style.cursor = 'e-resize';
                    this.resizerIndicatorElement.classList.add('sme-width-xxs');
                    this.resizerIndicatorElement.classList.add('sme-position-stretch-v');
                    break;
                case 'right':
                    this.resizerHostBodyElement.style.cursor = 'w-resize';
                    this.resizerIndicatorElement.classList.add('sme-width-xxs');
                    this.resizerIndicatorElement.classList.add('sme-position-stretch-v');
                    break;
            }
            var foundExistingResizerHostBody = false;
            for (var i = 0; i < this.resizerHostElement.children.length; i++) {
                if (this.resizerHostElement.children[i].classList.contains('resizer-host-body')) {
                    foundExistingResizerHostBody = true;
                    this.resizerHostBodyElement = this.resizerHostElement.children[i];
                    this.resizerIndicatorElement = this.resizerHostBodyElement.querySelector('.resizer-indicator');
                    break;
                }
            }
            if (!foundExistingResizerHostBody) {
                this.resizerHostElement.appendChild(this.resizerHostBodyElement);
                this.resizerHostBodyElement.appendChild(this.resizerIndicatorElement);
            }
            this.onStartingResizeEventHandler = this.onStartingResizing.bind(this);
            this.onResizingEventHandler = this.onResizing.bind(this);
            this.onFinishingResizeEventHandler = this.onFinishingResizing.bind(this);
        }
    };
    /**
     * It handles the event when mouse down happens on the resizer.
     */
    ResizerComponent.prototype.onResizeElementMouseDown = function ($event) {
        this.isResizing = true;
        document.body.addEventListener('mousedown', this.onStartingResizeEventHandler);
        document.body.addEventListener('mousemove', this.onResizingEventHandler);
        document.body.addEventListener('mouseup', this.onFinishingResizeEventHandler);
    };
    ResizerComponent.prototype.onResizeElementKeyDown = function ($event) {
        if (this.isHorizontal) {
            switch ($event.keyCode) {
                case KeyCode.LeftArrow:
                    this.resized.emit({
                        x: -ResizerComponent.keyboardDelta,
                        y: 0
                    });
                    break;
                case KeyCode.RightArrow:
                    this.resized.emit({
                        x: ResizerComponent.keyboardDelta,
                        y: 0
                    });
                    break;
            }
        }
        else if (this.isVertical) {
            switch ($event.keyCode) {
                case KeyCode.UpArrow:
                    this.resized.emit({
                        x: 0,
                        y: -ResizerComponent.keyboardDelta
                    });
                    break;
                case KeyCode.DownArrow:
                    this.resized.emit({
                        x: 0,
                        y: ResizerComponent.keyboardDelta
                    });
                    break;
            }
        }
    };
    ResizerComponent.prototype.startResize = function (offsetX, offsetY) {
        this.isResizing = true;
        this.offsetX = offsetX;
        this.offsetY = offsetY;
        document.body.style.userSelect = 'none';
        this.resizerHostBodyElement.classList.remove('sme-layout-none');
        this.resizerIndicatorElement.classList.remove('sme-layout-none');
        var resizerHostRect = this.resizerHostBodyElement.getBoundingClientRect();
        var resizerElementRect = this.hostElement.nativeElement.getBoundingClientRect();
        this.originalX = resizerElementRect.left - resizerHostRect.left;
        this.originalY = resizerElementRect.top - resizerHostRect.top;
    };
    ResizerComponent.prototype.onStartingResizing = function (event) {
        if (this.isResizing) {
            this.startResize(event.clientX, event.clientY);
            this.onResizing(event);
            event.preventDefault();
        }
    };
    ResizerComponent.prototype.onResizing = function (event) {
        if (this.isResizing) {
            var resizerHostRect = this.resizerHostBodyElement.getBoundingClientRect();
            var resizerElementRect = this.hostElement.nativeElement.getBoundingClientRect();
            var indicatorX = void 0;
            var indicatorY = void 0;
            var newX = void 0;
            var newY = void 0;
            switch (this.orientation) {
                case 'top':
                    newY = this.hostElement.nativeElement.offsetTop + event.clientY - this.offsetY;
                    this.offsetY = event.clientY;
                    this.hostElement.nativeElement.style.top = newY + 'px';
                    indicatorY = this.hostElement.nativeElement.parentElement.getBoundingClientRect().top
                        - resizerHostRect.top + newY;
                    this.resizerIndicatorElement.style.top = indicatorY + 'px';
                    break;
                case 'bottom':
                    newY = this.hostElement.nativeElement.offsetTop + event.clientY - this.offsetY;
                    this.offsetY = event.clientY;
                    this.hostElement.nativeElement.style.top = newY + 'px';
                    indicatorY = this.originalY + newY;
                    this.resizerIndicatorElement.style.top = indicatorY + 'px';
                    break;
                case 'left':
                    newX = this.hostElement.nativeElement.offsetLeft + event.clientX - this.offsetX;
                    this.offsetX = event.clientX;
                    this.hostElement.nativeElement.style.left = newX + 'px';
                    indicatorX = this.hostElement.nativeElement.parentElement.getBoundingClientRect().left
                        - resizerHostRect.left + newX;
                    this.resizerIndicatorElement.style.left = indicatorX + 'px';
                    break;
                case 'right':
                    newX = this.hostElement.nativeElement.offsetLeft + event.clientX - this.offsetX;
                    this.offsetX = event.clientX;
                    this.hostElement.nativeElement.style.left = newX + 'px';
                    indicatorX = this.originalX + newX;
                    this.resizerIndicatorElement.style.left = indicatorX + 'px';
                    break;
            }
            this.resizing.emit({ x: indicatorX, y: indicatorY });
        }
    };
    ResizerComponent.prototype.onFinishingResizing = function () {
        if (this.isResizing) {
            document.body.removeEventListener('mousedown', this.onStartingResizeEventHandler);
            document.body.removeEventListener('mousemove', this.onResizingEventHandler);
            document.body.removeEventListener('mouseup', this.onFinishingResizeEventHandler);
            this.isResizing = false;
            var deltaX = void 0;
            var deltaY = void 0;
            var resizerHostRect = this.resizerHostBodyElement.getBoundingClientRect();
            var resizerElementRect = this.hostElement.nativeElement.getBoundingClientRect();
            var newX = resizerElementRect.left - resizerHostRect.left;
            var newY = resizerElementRect.top - resizerHostRect.top;
            switch (this.orientation) {
                case 'left':
                    deltaX = newX - this.originalX;
                    deltaY = 0;
                    break;
                case 'right':
                    deltaX = newX - this.originalX;
                    deltaY = 0;
                    break;
                case 'top':
                    deltaX = 0;
                    deltaY = newY - this.originalY;
                    break;
                case 'bottom':
                    deltaX = 0;
                    deltaY = newY - this.originalY;
                    break;
            }
            this.resized.emit({
                x: deltaX,
                y: deltaY
            });
            this.resizerHostBodyElement.classList.add('sme-layout-none');
            document.body.style.userSelect = 'auto';
            this.resizerHostBodyElement.classList.add('sme-layout-none');
            this.resizerIndicatorElement.classList.add('sme-layout-none');
            this.hostElement.nativeElement.style.left = '';
            this.hostElement.nativeElement.style.top = '';
        }
    };
    ResizerComponent.prototype.isOriented = function () {
        var _this = this;
        var orientations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            orientations[_i] = arguments[_i];
        }
        return orientations.some(function (o) { return o === _this.orientation; });
    };
    ResizerComponent.prototype.getInitialHostClasses = function () {
        return _super.prototype.getInitialHostClasses.call(this)
            .concat([
            'sme-layout-absolute',
            'sme-layer-over'
        ]);
    };
    ResizerComponent.keyboardDelta = 20;
    ResizerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sme-resizer',
                    template: ''
                },] },
    ];
    /** @nocollapse */
    ResizerComponent.ctorParameters = function () { return [
        { type: Injector, },
    ]; };
    ResizerComponent.propDecorators = {
        'resizerHostSelector': [{ type: Input },],
        'showResizerCover': [{ type: Input },],
        'visibleToScreenReader': [{ type: Input },],
        'orientation': [{ type: Input },],
        'resized': [{ type: Output },],
        'resizing': [{ type: Output },],
        'alignTop': [{ type: HostBinding, args: ['class.sme-position-top-none',] },],
        'alignBottom': [{ type: HostBinding, args: ['class.sme-position-bottom-none',] },],
        'alignLeft': [{ type: HostBinding, args: ['class.sme-position-left-none',] },],
        'alignRight': [{ type: HostBinding, args: ['class.sme-position-right-none',] },],
        'isVertical': [{ type: HostBinding, args: ['class.sme-height-xxs',] },],
        'isHorizontal': [{ type: HostBinding, args: ['class.sme-width-xxs',] },],
        'ariaOrientation': [{ type: HostBinding, args: ['attr.aria-orientation',] },],
        'cursor': [{ type: HostBinding, args: ['style.cursor',] },],
        'onResizeElementMouseDown': [{ type: HostListener, args: ['mousedown', ['$event'],] },],
        'onResizeElementKeyDown': [{ type: HostListener, args: ['keydown', ['$event'],] },],
    };
    return ResizerComponent;
}(BaseComponent));
export { ResizerComponent };
//# sourceMappingURL=data:application/json;base64,