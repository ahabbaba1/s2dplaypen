[{"__symbolic":"module","version":3,"metadata":{"LineChartType":{"Line":1,"Scatter":2,"Historical":3},"LineChartData":{"__symbolic":"interface"},"LineChartComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-line-chart","template":"\n      <div *ngIf=\"lineChartData\">\n          <div class=\"line-chart-header\"> {{ lineChartData.title }}</div>\n\n          <div class=\"line-chart-subheader\">\n              <div *ngIf=\"lineChartData.currentValueLabel\">{{ lineChartData.currentValueLabel }}<span class=\"line-chart-units\">{{ lineChartData.unitLabel }}</span></div>\n\n              <div *ngIf=\"lineChartData.firstCurrentValueLabel\" class=\"hero-values hero-legend\">\n                  <span class=\"line-chart-units\">{{ lineChartData.firstLabel }}</span>\n                  <span class=\"current-value\">{{ lineChartData.firstCurrentValueLabel }}</span>\n              </div>\n              <div *ngIf=\"lineChartData.secondCurrentValueLabel\" class=\"hero-values hero-legend-dotted\">\n                  <span class=\"line-chart-units\">{{ lineChartData.secondLabel }}</span>\n                  <span class=\"current-value\">{{ lineChartData.secondCurrentValueLabel }}</span>\n              </div>\n              <div *ngIf=\"lineChartData.totalCurrentValueLabel\" class=\"hero-values\">\n                  <span class=\"line-chart-units\">{{ lineChartData.totalLabel }}</span>\n                  <span class=\"current-value\">{{ lineChartData.totalCurrentValueLabel }}</span>\n              </div>\n\n          </div>\n\n          <div class=\"sme-arrange-stack-h\">\n              <div class=\"line-chart-container\">\n                  <p-chart class=\"sme-position-flex-none line-chart\" #linechart [type]=\"getTypeString(lineChartData.type)\" [data]=\"lineChartData.chartData\" [options]=\"chartOptions\"></p-chart>\n                  <div class=\"scale-limit x-axis-label\">\n                      <div class=\"pull-left\">{{ lineChartData.xAxisMaxLabel }}</div>\n                      <div class=\"pull-right\">{{ lineChartData.xAxisMinLabel }}</div>\n                  </div>\n              </div>\n              <div class=\"sme-position-flex-auto sme-arrange-stack-v y-axis-label scale-limit\">\n                  <div class=\"pull-right no-wrap\">{{ lineChartData.yAxisMaxLabel }}</div>\n                  <div class=\"pull-right no-wrap\">{{ lineChartData.yAxisMinLabel }}</div>\n              </div>\n          </div>\n\n      </div>\n    ","styles":["\n      .line-chart-header{\n          font-size: 15px;\n          vertical-align: middle;\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n          color: #333333;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n          margin-bottom: 2px;\n      }\n\n      .line-chart-subheader{\n          color: #333333;\n          font-size: 24px;\n          line-height: 24px;\n          font-weight: 600;\n          margin-bottom: 38px;\n      }\n\n      .hero-values {\n          display: inline-block;\n          margin-right: 5px;\n      }\n\n      .hero-legend {\n          border-left: 3px solid #8397a0;\n      }\n\n      .hero-legend-dotted {\n          border-left: 3px dotted #8397a0;\n      }\n\n      .current-value {\n          font-size: 15px;\n      }\n\n      .line-chart-units {\n          color: #333333;\n          margin-left: 3px;\n          font-size: 15px;\n          font-weight: 400;\n          line-height: 15px;\n      }\n\n      .scale-limit {\n          font-size: 11px;\n          color: #686868;\n          height: 14px;\n          line-height: 11px;\n      }\n\n      .line-chart{\n          border-right: 1px solid #DDDDDD;\n          border-bottom: 1px solid #DDDDDD;\n          display: block;\n      }\n\n      .line-chart-container {\n        width: 100%;\n      }\n\n      .y-axis-label {\n          margin-left: 6px;\n          margin-bottom: 20px;\n          justify-content: space-between;\n          height: inherit;\n      }\n\n      .x-axis-label {\n          margin-top: 6px;\n      }\n    "],"providers":[{"__symbolic":"reference","module":"@angular/common","name":"DatePipe"}]}]}],"members":{"chart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["linechart"]}]}],"tooltipFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"lineChartData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common","name":"DatePipe"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"override":[{"__symbolic":"method"}],"validateChartType":[{"__symbolic":"method"}],"getTypeString":[{"__symbolic":"method"}],"getTooltipLabel":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"LineChartType":{"Line":1,"Scatter":2,"Historical":3},"LineChartData":{"__symbolic":"interface"},"LineChartComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-line-chart","template":"\n      <div *ngIf=\"lineChartData\">\n          <div class=\"line-chart-header\"> {{ lineChartData.title }}</div>\n\n          <div class=\"line-chart-subheader\">\n              <div *ngIf=\"lineChartData.currentValueLabel\">{{ lineChartData.currentValueLabel }}<span class=\"line-chart-units\">{{ lineChartData.unitLabel }}</span></div>\n\n              <div *ngIf=\"lineChartData.firstCurrentValueLabel\" class=\"hero-values hero-legend\">\n                  <span class=\"line-chart-units\">{{ lineChartData.firstLabel }}</span>\n                  <span class=\"current-value\">{{ lineChartData.firstCurrentValueLabel }}</span>\n              </div>\n              <div *ngIf=\"lineChartData.secondCurrentValueLabel\" class=\"hero-values hero-legend-dotted\">\n                  <span class=\"line-chart-units\">{{ lineChartData.secondLabel }}</span>\n                  <span class=\"current-value\">{{ lineChartData.secondCurrentValueLabel }}</span>\n              </div>\n              <div *ngIf=\"lineChartData.totalCurrentValueLabel\" class=\"hero-values\">\n                  <span class=\"line-chart-units\">{{ lineChartData.totalLabel }}</span>\n                  <span class=\"current-value\">{{ lineChartData.totalCurrentValueLabel }}</span>\n              </div>\n\n          </div>\n\n          <div class=\"sme-arrange-stack-h\">\n              <div class=\"line-chart-container\">\n                  <p-chart class=\"sme-position-flex-none line-chart\" #linechart [type]=\"getTypeString(lineChartData.type)\" [data]=\"lineChartData.chartData\" [options]=\"chartOptions\"></p-chart>\n                  <div class=\"scale-limit x-axis-label\">\n                      <div class=\"pull-left\">{{ lineChartData.xAxisMaxLabel }}</div>\n                      <div class=\"pull-right\">{{ lineChartData.xAxisMinLabel }}</div>\n                  </div>\n              </div>\n              <div class=\"sme-position-flex-auto sme-arrange-stack-v y-axis-label scale-limit\">\n                  <div class=\"pull-right no-wrap\">{{ lineChartData.yAxisMaxLabel }}</div>\n                  <div class=\"pull-right no-wrap\">{{ lineChartData.yAxisMinLabel }}</div>\n              </div>\n          </div>\n\n      </div>\n    ","styles":["\n      .line-chart-header{\n          font-size: 15px;\n          vertical-align: middle;\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n          color: #333333;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n          margin-bottom: 2px;\n      }\n\n      .line-chart-subheader{\n          color: #333333;\n          font-size: 24px;\n          line-height: 24px;\n          font-weight: 600;\n          margin-bottom: 38px;\n      }\n\n      .hero-values {\n          display: inline-block;\n          margin-right: 5px;\n      }\n\n      .hero-legend {\n          border-left: 3px solid #8397a0;\n      }\n\n      .hero-legend-dotted {\n          border-left: 3px dotted #8397a0;\n      }\n\n      .current-value {\n          font-size: 15px;\n      }\n\n      .line-chart-units {\n          color: #333333;\n          margin-left: 3px;\n          font-size: 15px;\n          font-weight: 400;\n          line-height: 15px;\n      }\n\n      .scale-limit {\n          font-size: 11px;\n          color: #686868;\n          height: 14px;\n          line-height: 11px;\n      }\n\n      .line-chart{\n          border-right: 1px solid #DDDDDD;\n          border-bottom: 1px solid #DDDDDD;\n          display: block;\n      }\n\n      .line-chart-container {\n        width: 100%;\n      }\n\n      .y-axis-label {\n          margin-left: 6px;\n          margin-bottom: 20px;\n          justify-content: space-between;\n          height: inherit;\n      }\n\n      .x-axis-label {\n          margin-top: 6px;\n      }\n    "],"providers":[{"__symbolic":"reference","module":"@angular/common","name":"DatePipe"}]}]}],"members":{"chart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["linechart"]}]}],"tooltipFormatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"lineChartData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common","name":"DatePipe"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"override":[{"__symbolic":"method"}],"validateChartType":[{"__symbolic":"method"}],"getTypeString":[{"__symbolic":"method"}],"getTooltipLabel":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}]}}}}]