[{"__symbolic":"module","version":3,"metadata":{"CommonSettingsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-common-settings","template":"\n      <div class=\"sme-position-flex-auto sme-arrange-stack-h sme-position-stretch-v\">\n          <sme-settings class=\"sme-position-flex-auto\" [settingsTitle]=\"settingsTitle\">\n              <sme-settings-navigation>\n                  <nav role=\"tablist\" id=\"settingsSideNavigation\" [title]=\"settingsTitle\" class=\"settings-navigation nav side-navigation side-navigation-large theme-default sme-arrange-stack-v\">\n                      <ul class=\"sme-position-flex-auto sme-arrange-stack-v sme-arrange-overflow-hide-x sme-arrange-overflow-auto-y\">\n                          <li *ngFor=\"let setting of settings\">\n                              <a class=\"sme-position-flex-none\" role=\"tab\"  [routerLink]=\"setting.routeParams.commands\" routerLinkActive=\"active\"\n                                  [ngClass]=\"{dirty: !!(setting.form && setting.form.dirty)}\" [preserveQueryParams]=\"setting.routeParams.extras && setting.routeParams.extras.preserveQueryParams\"\n                                  [preserveFragment]=\"setting.routeParams.extras && setting.routeParams.extras.preserveFragment\" [skipLocationChange]=\"setting.routeParams.extras && setting.routeParams.extras.skipLocationChange\"\n                                  [replaceUrl]=\"setting.routeParams.extras && setting.routeParams.extras.replaceUrl\" [queryParams]=\"setting.routeParams.extras && setting.routeParams.extras.queryParams\"\n                                  [title]=\"setting.label\">\n                                  <div class=\"item-border sme-arrange-stack-h\">\n                                      <div class=\"sme-icon\" [ngClass]=\"getSmeIconClass(setting)\">\n                                      </div>\n                                      <span class=\"ellipsis sme-position-flex-auto\">\n                                          {{setting.label}}\n                                      </span>\n                                  </div>\n                              </a>\n                          </li>\n                      </ul>\n                  </nav>\n              </sme-settings-navigation>\n              <sme-settings-header>\n                  <h4 id=\"sme-shell-setting-selectedTitle\" *ngIf=\"!!detectActiveSettingItem()\">{{selectedSettingTitle}}</h4>\n              </sme-settings-header>\n              <sme-settings-content>\n                  <router-outlet></router-outlet>\n              </sme-settings-content>\n              <sme-settings-footer>\n                  <ng-content></ng-content>\n              </sme-settings-footer>\n          </sme-settings>\n      </div>\n    ","styles":["\n      :host {\n        height: 100%;\n      }\n\n      .side-navigation.side-navigation-large {\n        max-width: 320px;\n        width: auto\n      }\n\n      @media (max-width: 792px){\n        .side-navigation.side-navigation-large {\n            display: block;\n            max-width: 80px;\n        }\n      }\n\n      .side-navigation.side-navigation-large ul li {\n        padding: 0px;\n        text-decoration: none;\n      }\n      .side-navigation.side-navigation-large ul li a {\n        height: 48px;\n        padding: 13px 12px 13px 0px;\n        cursor: pointer;\n        font-size: 15px;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .side-navigation.side-navigation-large ul li a div.sme-icon {\n        margin-right: 12px;\n      }\n\n      .side-navigation.side-navigation-large ul li a:focus {\n        outline: 1px dashed #000;\n        outline-offset: -1px;\n      }\n\n      .side-navigation.side-navigation-large ul li a:hover {\n        background: rgba(242,242,242,1);\n      }\n\n      .side-navigation.side-navigation-large ul li a.active {\n        color: rgba(0,120,215,1);\n      }\n\n      .side-navigation.side-navigation-large ul li a.dirty {\n        font-style: italic;\n      }\n\n      .side-navigation.side-navigation-large ul li a.active .item-border {\n        border-left-color: rgba(0,120,215,1);\n      }\n\n      .item-border {\n        border-left: 4px solid transparent;\n        padding-left: 9px;\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        border-color: transparent;\n      }\n\n      .ellipsis {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: block;\n      }\n    "]}]}],"members":{"settingsTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"backRoute":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settingsComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"../settings.component","name":"SettingsComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"../settings-form.service","name":"SettingsFormService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"recalculateActivePanel":[{"__symbolic":"method"}],"discardAllChildForms":[{"__symbolic":"method"}],"acceptAllChildFormsValue":[{"__symbolic":"method"}],"getSmeIconClass":[{"__symbolic":"method"}],"canDeactivate":[{"__symbolic":"method"}],"resetSubscriptions":[{"__symbolic":"method"}],"detectActiveSettingItem":[{"__symbolic":"method"}],"getActiveSettingItem":[{"__symbolic":"method"}],"getRawValueRecursive":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"CommonSettingsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-common-settings","template":"\n      <div class=\"sme-position-flex-auto sme-arrange-stack-h sme-position-stretch-v\">\n          <sme-settings class=\"sme-position-flex-auto\" [settingsTitle]=\"settingsTitle\">\n              <sme-settings-navigation>\n                  <nav role=\"tablist\" id=\"settingsSideNavigation\" [title]=\"settingsTitle\" class=\"settings-navigation nav side-navigation side-navigation-large theme-default sme-arrange-stack-v\">\n                      <ul class=\"sme-position-flex-auto sme-arrange-stack-v sme-arrange-overflow-hide-x sme-arrange-overflow-auto-y\">\n                          <li *ngFor=\"let setting of settings\">\n                              <a class=\"sme-position-flex-none\" role=\"tab\"  [routerLink]=\"setting.routeParams.commands\" routerLinkActive=\"active\"\n                                  [ngClass]=\"{dirty: !!(setting.form && setting.form.dirty)}\" [preserveQueryParams]=\"setting.routeParams.extras && setting.routeParams.extras.preserveQueryParams\"\n                                  [preserveFragment]=\"setting.routeParams.extras && setting.routeParams.extras.preserveFragment\" [skipLocationChange]=\"setting.routeParams.extras && setting.routeParams.extras.skipLocationChange\"\n                                  [replaceUrl]=\"setting.routeParams.extras && setting.routeParams.extras.replaceUrl\" [queryParams]=\"setting.routeParams.extras && setting.routeParams.extras.queryParams\"\n                                  [title]=\"setting.label\">\n                                  <div class=\"item-border sme-arrange-stack-h\">\n                                      <div class=\"sme-icon\" [ngClass]=\"getSmeIconClass(setting)\">\n                                      </div>\n                                      <span class=\"ellipsis sme-position-flex-auto\">\n                                          {{setting.label}}\n                                      </span>\n                                  </div>\n                              </a>\n                          </li>\n                      </ul>\n                  </nav>\n              </sme-settings-navigation>\n              <sme-settings-header>\n                  <h4 id=\"sme-shell-setting-selectedTitle\" *ngIf=\"!!detectActiveSettingItem()\">{{selectedSettingTitle}}</h4>\n              </sme-settings-header>\n              <sme-settings-content>\n                  <router-outlet></router-outlet>\n              </sme-settings-content>\n              <sme-settings-footer>\n                  <ng-content></ng-content>\n              </sme-settings-footer>\n          </sme-settings>\n      </div>\n    ","styles":["\n      :host {\n        height: 100%;\n      }\n\n      .side-navigation.side-navigation-large {\n        max-width: 320px;\n        width: auto\n      }\n\n      @media (max-width: 792px){\n        .side-navigation.side-navigation-large {\n            display: block;\n            max-width: 80px;\n        }\n      }\n\n      .side-navigation.side-navigation-large ul li {\n        padding: 0px;\n        text-decoration: none;\n      }\n      .side-navigation.side-navigation-large ul li a {\n        height: 48px;\n        padding: 13px 12px 13px 0px;\n        cursor: pointer;\n        font-size: 15px;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .side-navigation.side-navigation-large ul li a div.sme-icon {\n        margin-right: 12px;\n      }\n\n      .side-navigation.side-navigation-large ul li a:focus {\n        outline: 1px dashed #000;\n        outline-offset: -1px;\n      }\n\n      .side-navigation.side-navigation-large ul li a:hover {\n        background: rgba(242,242,242,1);\n      }\n\n      .side-navigation.side-navigation-large ul li a.active {\n        color: rgba(0,120,215,1);\n      }\n\n      .side-navigation.side-navigation-large ul li a.dirty {\n        font-style: italic;\n      }\n\n      .side-navigation.side-navigation-large ul li a.active .item-border {\n        border-left-color: rgba(0,120,215,1);\n      }\n\n      .item-border {\n        border-left: 4px solid transparent;\n        padding-left: 9px;\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        border-color: transparent;\n      }\n\n      .ellipsis {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: block;\n      }\n    "]}]}],"members":{"settingsTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"backRoute":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settingsComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"../settings.component","name":"SettingsComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"../settings-form.service","name":"SettingsFormService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"recalculateActivePanel":[{"__symbolic":"method"}],"discardAllChildForms":[{"__symbolic":"method"}],"acceptAllChildFormsValue":[{"__symbolic":"method"}],"getSmeIconClass":[{"__symbolic":"method"}],"canDeactivate":[{"__symbolic":"method"}],"resetSubscriptions":[{"__symbolic":"method"}],"detectActiveSettingItem":[{"__symbolic":"method"}],"getActiveSettingItem":[{"__symbolic":"method"}],"getRawValueRecursive":[{"__symbolic":"method"}]}}}}]