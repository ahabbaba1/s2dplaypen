[{"__symbolic":"module","version":3,"metadata":{"SplitViewOrientation":{"__symbolic":"interface"},"SplitViewContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-split-view-content","template":"<ng-content></ng-content>"}]}]},"SplitViewPaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-split-view-pane","template":"<ng-content></ng-content>"}]}]},"SplitViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-split-view","template":"\n      <ng-container *ngIf=\"orientation==='bottom' || orientation==='right'\">\n          <section class=\"sme-layout-relative sme-position-flex-auto sme-background-color-base\" [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n          </section>\n          <section #paneContainer class=\"sme-layout-relative sme-position-flex-none sme-border-color-base-80 sme-background-color-base\"\n              [class.sme-border-left-sm]=\"showSplitterBorder && orientation === 'right'\" [class.sme-border-top-sm]=\"showSplitterBorder && orientation === 'bottom'\"\n              [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <sme-resizer *ngIf=\"isExpanded\" [tabindex]=\"[isExpanded?0:null]\" [class.sme-focus-zone]=\"isExpanded\" resizerHostSelector=\"sme-split-view\" (resized)=\"onResized($event)\"\n                  [orientation]=\"orientation\">\n              </sme-resizer>\n              <ng-container *ngTemplateOutlet=\"pane\"></ng-container>\n          </section>\n      </ng-container>\n      <ng-container *ngIf=\"orientation==='top' || orientation==='left'\">\n          <section #paneContainer class=\"sme-layout-relative sme-position-flex-none sme-border-color-base-80 sme-background-color-base\"\n              [class.sme-border-right-sm]=\"showSplitterBorder && orientation === 'left'\" [class.sme-border-bottom-sm]=\"showSplitterBorder && orientation === 'top'\"\n              [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <ng-container *ngTemplateOutlet=\"pane\"></ng-container>\n              <sme-resizer *ngIf=\"isExpanded\" [tabindex]=\"[isExpanded?0:null]\" [class.sme-focus-zone]=\"isExpanded\" resizerHostSelector=\"sme-split-view\" (resized)=\"onResized($event)\"\n                  [orientation]=\"orientation\" [attr.aria-valuenow]=\"getAriaValueNow()\">\n              </sme-resizer>\n          </section>\n          <section class=\"sme-layout-relative sme-position-flex-auto sme-background-color-base\" [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n          </section>\n      </ng-container>\n      <ng-template #content>\n          <ng-content select=\"sme-split-view-content\"></ng-content>\n      </ng-template>\n      <ng-template #pane>\n          <ng-content select=\"sme-split-view-pane\"></ng-content>\n      </ng-template>\n      <!-- The reason to use ng-tempalte to wrap the ng-content element instead of directly to use ng-content in both two ng-containers above is:\n      If we use ng-content elements directly in both 2 ng-containers, there will be 2 ng-content elements with the same selector. But Angular will only \n      resolve the first ng-content in multiple ng-content elements with same selector even the first one is in a ngIf false block.\n      So when the orientation is \"top\" or \"left\", no ng-content element will be resolved then nothing would render.\n      In order to solve this problem, we have to use ng-template to wrap the ng-content to make sure one selector maps to one ng-content.\n      Then we use ng-container and ngTemplateOutlet to call the ng-template. \n      Thx for reading till here...... -->\n    ","providers":[{"provide":"layout","useExisting":{"__symbolic":"reference","name":"SplitViewComponent"}}]}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","name":"SplitViewContentComponent"}]}]}],"pane":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","name":"SplitViewPaneComponent"}]}]}],"paneContainerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["paneContainer"]}]}],"showScrollbar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showSplitterBorder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"paneDistance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"resizeLowerMargin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"resizeUpperMargin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"orientation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"paneToggling":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"paneToggled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}],"hostClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["class"]}]}],"flexDirection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["style.flex-direction"]}]}],"isExpanded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"onWindowResized":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:resize"]}]}],"togglePane":[{"__symbolic":"method"}],"onResized":[{"__symbolic":"method"}],"getAriaValueNow":[{"__symbolic":"method"}],"refreshUI":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"SplitViewOrientation":{"__symbolic":"interface"},"SplitViewContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-split-view-content","template":"<ng-content></ng-content>"}]}]},"SplitViewPaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-split-view-pane","template":"<ng-content></ng-content>"}]}]},"SplitViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-split-view","template":"\n      <ng-container *ngIf=\"orientation==='bottom' || orientation==='right'\">\n          <section class=\"sme-layout-relative sme-position-flex-auto sme-background-color-base\" [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n          </section>\n          <section #paneContainer class=\"sme-layout-relative sme-position-flex-none sme-border-color-base-80 sme-background-color-base\"\n              [class.sme-border-left-sm]=\"showSplitterBorder && orientation === 'right'\" [class.sme-border-top-sm]=\"showSplitterBorder && orientation === 'bottom'\"\n              [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <sme-resizer *ngIf=\"isExpanded\" [tabindex]=\"[isExpanded?0:null]\" [class.sme-focus-zone]=\"isExpanded\" resizerHostSelector=\"sme-split-view\" (resized)=\"onResized($event)\"\n                  [orientation]=\"orientation\">\n              </sme-resizer>\n              <ng-container *ngTemplateOutlet=\"pane\"></ng-container>\n          </section>\n      </ng-container>\n      <ng-container *ngIf=\"orientation==='top' || orientation==='left'\">\n          <section #paneContainer class=\"sme-layout-relative sme-position-flex-none sme-border-color-base-80 sme-background-color-base\"\n              [class.sme-border-right-sm]=\"showSplitterBorder && orientation === 'left'\" [class.sme-border-bottom-sm]=\"showSplitterBorder && orientation === 'top'\"\n              [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <ng-container *ngTemplateOutlet=\"pane\"></ng-container>\n              <sme-resizer *ngIf=\"isExpanded\" [tabindex]=\"[isExpanded?0:null]\" [class.sme-focus-zone]=\"isExpanded\" resizerHostSelector=\"sme-split-view\" (resized)=\"onResized($event)\"\n                  [orientation]=\"orientation\" [attr.aria-valuenow]=\"getAriaValueNow()\">\n              </sme-resizer>\n          </section>\n          <section class=\"sme-layout-relative sme-position-flex-auto sme-background-color-base\" [class.sme-arrange-overflow-auto]=\"showScrollbar\">\n              <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n          </section>\n      </ng-container>\n      <ng-template #content>\n          <ng-content select=\"sme-split-view-content\"></ng-content>\n      </ng-template>\n      <ng-template #pane>\n          <ng-content select=\"sme-split-view-pane\"></ng-content>\n      </ng-template>\n      <!-- The reason to use ng-tempalte to wrap the ng-content element instead of directly to use ng-content in both two ng-containers above is:\n      If we use ng-content elements directly in both 2 ng-containers, there will be 2 ng-content elements with the same selector. But Angular will only \n      resolve the first ng-content in multiple ng-content elements with same selector even the first one is in a ngIf false block.\n      So when the orientation is \"top\" or \"left\", no ng-content element will be resolved then nothing would render.\n      In order to solve this problem, we have to use ng-template to wrap the ng-content to make sure one selector maps to one ng-content.\n      Then we use ng-container and ngTemplateOutlet to call the ng-template. \n      Thx for reading till here...... -->\n    ","providers":[{"provide":"layout","useExisting":{"__symbolic":"reference","name":"SplitViewComponent"}}]}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","name":"SplitViewContentComponent"}]}]}],"pane":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","name":"SplitViewPaneComponent"}]}]}],"paneContainerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["paneContainer"]}]}],"showScrollbar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showSplitterBorder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"paneDistance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"resizeLowerMargin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"resizeUpperMargin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"orientation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"paneToggling":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"paneToggled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"}]}],"hostClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["class"]}]}],"flexDirection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["style.flex-direction"]}]}],"isExpanded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"onWindowResized":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["window:resize"]}]}],"togglePane":[{"__symbolic":"method"}],"onResized":[{"__symbolic":"method"}],"getAriaValueNow":[{"__symbolic":"method"}],"refreshUI":[{"__symbolic":"method"}]}}}}]