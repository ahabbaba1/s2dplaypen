[{"__symbolic":"module","version":3,"metadata":{"WizardFooterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-wizard-footer","template":"<ng-content></ng-content>"}]}]},"WizardComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../common/dynamic.component","name":"DynamicComponentBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-wizard","styles":["\n      section.left {\n          border-right: 1px solid #e4e4e4;\n          margin: 0 0 0 36px;\n          padding: 48px 0 36px 0;\n          width: 320px;\n      }\n\n      section.right {\n          margin: 120px 0 36px 72px;\n      }\n\n      .wizard-title {\n          margin: 0 0 36px 0;\n      }\n\n      .wizard-title * {\n          padding: 0;\n          margin: 0;\n          line-height: 36px;\n      }\n\n      .step-list {\n          padding: 0;\n          margin: 0;\n      }\n\n      .step {\n          align-items: center;\n          cursor: pointer;\n          height: 48px;\n          list-style-type: none;\n          user-select: none;\n          margin: 0;\n          padding: 0;\n      }\n\n      .step.active * {\n          font-weight: bold;\n      }\n\n      .step.active *::before {\n          font-weight: bold;\n      }\n\n      .step.disabled {\n          cursor: not-allowed;\n          opacity: .6;\n      }\n\n      .step-index {\n          background: transparent;\n          border-radius: 16px;\n          font-size: 15px;\n          height: 32px;\n          line-height: 20px;\n          text-align: center;\n          padding: 5px 0 0 0; /* There's gotta be a better way to vertically center the number than putting padding...*/\n          width: 32px;\n      }\n\n      .step.active .step-index {\n          background: #e4e4e4;\n      }\n\n      .step:hover .step-index {\n          background: #e4e4e4;\n      }\n\n      .step-title {\n          font-size: 15px;\n          line-height: 20px;\n          margin: 0 0 0 12px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n      }\n\n      .wizard-buttons {\n          float: right;\n      }\n\n      :host >>> .progress-cover {\n          height: 20px;\n          width: 20px;\n          margin-top: 10px;\n      }\n\n      .validation-loading-wheel {\n          display: inline-block;\n          height: 20px;\n          width: 20px;\n      }\n\n      .validation-label {\n          vertical-align: -webkit-baseline-middle;\n          font-size: 15px;\n          line-height: 20px;\n          margin-right: 8px;\n      }\n    "],"template":"\n      <div class=\"sme-arrange-stack-h\">\n          <section class=\"left sme-position-flex-none\">\n              <div *ngIf=\"title\" class=\"wizard-title\">\n                  <h4>{{title}}</h4>\n              </div>\n\n              <ul class=\"step-list\">\n                  <li [class.active]=\"i === stepIndex\" [class.disabled]=\"step.disabled\" class=\"step sme-arrange-stack-h\" *ngFor=\"let step of steps; let i = index\" (click)=\"onStepClick(i)\">\n                      <span [class.sme-icon]=\"step.completed\" [class.sme-icon-accept]=\"step.completed\" class=\"sme-position-flex-none step-index\">{{!step.completed ? i + 1 : ''}}</span>\n                      <span class=\"sme-position-flex-auto step-title\">{{step.name}}</span>\n                  </li>\n              </ul>\n          </section>\n\n          <section class=\"sme-layout-relative right sme-position-flex-auto flex-display\">\n              <div class=\"sme-position-flex-auto\">\n                  <!-- Don't remove this line! -->\n                  <!-- The dynamically rendered component looks for #container to render itself as the sibling -->\n                  <div #container></div>\n              </div>\n\n              <div class=\"sme-position-flex-none\">\n                  <ng-content select=\"sme-wizard-footer\"></ng-content>\n                  <div *ngIf=\"showButtons\" class=\"flex-display wizard-buttons\">\n                      <div *ngIf=\"validating\" class=\"sme-layout-relative validation-loading-wheel\">\n                          <sme-loading-wheel size=\"small\"></sme-loading-wheel>\n                      </div>\n                      <span *ngIf=\"validating\" class=\"validation-label\">{{strings.MsftSmeShell.Angular.Wizard.validating}}</span>\n                      <button class=\"btn btn-primary\" type=\"button\" (click)=\"onBackClick()\" [disabled]=\"!currentStepComponent.valid || validating\">{{strings.MsftSmeShell.Angular.Common.back}}</button>\n                      <button class=\"btn btn-primary\" type=\"button\" (click)=\"onNextClick()\" [disabled]=\"!currentStepComponent.valid || validating\">{{strings.MsftSmeShell.Angular.Common.next}}</button>\n                      <button class=\"btn btn-secondary\" type=\"button\" (click)=\"onCancelClick()\">{{strings.MsftSmeShell.Angular.Common.cancel}}</button>\n                  </div>\n              </div>\n          </section>\n      </div>\n    "}]}],"members":{"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"steps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onCancelClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onComponentSubmitted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onFinishClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"footerComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","name":"WizardFooterComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver"}]}],"completeCurrentStep":[{"__symbolic":"method"}],"completeStep":[{"__symbolic":"method"}],"failCurrentStep":[{"__symbolic":"method"}],"failStep":[{"__symbolic":"method"}],"moveToNextStep":[{"__symbolic":"method"}],"moveToPreviousStep":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onBackClick":[{"__symbolic":"method"}],"onCancelClick":[{"__symbolic":"method"}],"onNextClick":[{"__symbolic":"method"}],"onStepClick":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"createComponent":[{"__symbolic":"method"}],"cleanComponent":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"WizardFooterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-wizard-footer","template":"<ng-content></ng-content>"}]}]},"WizardComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../common/dynamic.component","name":"DynamicComponentBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-wizard","styles":["\n      section.left {\n          border-right: 1px solid #e4e4e4;\n          margin: 0 0 0 36px;\n          padding: 48px 0 36px 0;\n          width: 320px;\n      }\n\n      section.right {\n          margin: 120px 0 36px 72px;\n      }\n\n      .wizard-title {\n          margin: 0 0 36px 0;\n      }\n\n      .wizard-title * {\n          padding: 0;\n          margin: 0;\n          line-height: 36px;\n      }\n\n      .step-list {\n          padding: 0;\n          margin: 0;\n      }\n\n      .step {\n          align-items: center;\n          cursor: pointer;\n          height: 48px;\n          list-style-type: none;\n          user-select: none;\n          margin: 0;\n          padding: 0;\n      }\n\n      .step.active * {\n          font-weight: bold;\n      }\n\n      .step.active *::before {\n          font-weight: bold;\n      }\n\n      .step.disabled {\n          cursor: not-allowed;\n          opacity: .6;\n      }\n\n      .step-index {\n          background: transparent;\n          border-radius: 16px;\n          font-size: 15px;\n          height: 32px;\n          line-height: 20px;\n          text-align: center;\n          padding: 5px 0 0 0; /* There's gotta be a better way to vertically center the number than putting padding...*/\n          width: 32px;\n      }\n\n      .step.active .step-index {\n          background: #e4e4e4;\n      }\n\n      .step:hover .step-index {\n          background: #e4e4e4;\n      }\n\n      .step-title {\n          font-size: 15px;\n          line-height: 20px;\n          margin: 0 0 0 12px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n      }\n\n      .wizard-buttons {\n          float: right;\n      }\n\n      :host >>> .progress-cover {\n          height: 20px;\n          width: 20px;\n          margin-top: 10px;\n      }\n\n      .validation-loading-wheel {\n          display: inline-block;\n          height: 20px;\n          width: 20px;\n      }\n\n      .validation-label {\n          vertical-align: -webkit-baseline-middle;\n          font-size: 15px;\n          line-height: 20px;\n          margin-right: 8px;\n      }\n    "],"template":"\n      <div class=\"sme-arrange-stack-h\">\n          <section class=\"left sme-position-flex-none\">\n              <div *ngIf=\"title\" class=\"wizard-title\">\n                  <h4>{{title}}</h4>\n              </div>\n\n              <ul class=\"step-list\">\n                  <li [class.active]=\"i === stepIndex\" [class.disabled]=\"step.disabled\" class=\"step sme-arrange-stack-h\" *ngFor=\"let step of steps; let i = index\" (click)=\"onStepClick(i)\">\n                      <span [class.sme-icon]=\"step.completed\" [class.sme-icon-accept]=\"step.completed\" class=\"sme-position-flex-none step-index\">{{!step.completed ? i + 1 : ''}}</span>\n                      <span class=\"sme-position-flex-auto step-title\">{{step.name}}</span>\n                  </li>\n              </ul>\n          </section>\n\n          <section class=\"sme-layout-relative right sme-position-flex-auto flex-display\">\n              <div class=\"sme-position-flex-auto\">\n                  <!-- Don't remove this line! -->\n                  <!-- The dynamically rendered component looks for #container to render itself as the sibling -->\n                  <div #container></div>\n              </div>\n\n              <div class=\"sme-position-flex-none\">\n                  <ng-content select=\"sme-wizard-footer\"></ng-content>\n                  <div *ngIf=\"showButtons\" class=\"flex-display wizard-buttons\">\n                      <div *ngIf=\"validating\" class=\"sme-layout-relative validation-loading-wheel\">\n                          <sme-loading-wheel size=\"small\"></sme-loading-wheel>\n                      </div>\n                      <span *ngIf=\"validating\" class=\"validation-label\">{{strings.MsftSmeShell.Angular.Wizard.validating}}</span>\n                      <button class=\"btn btn-primary\" type=\"button\" (click)=\"onBackClick()\" [disabled]=\"!currentStepComponent.valid || validating\">{{strings.MsftSmeShell.Angular.Common.back}}</button>\n                      <button class=\"btn btn-primary\" type=\"button\" (click)=\"onNextClick()\" [disabled]=\"!currentStepComponent.valid || validating\">{{strings.MsftSmeShell.Angular.Common.next}}</button>\n                      <button class=\"btn btn-secondary\" type=\"button\" (click)=\"onCancelClick()\">{{strings.MsftSmeShell.Angular.Common.cancel}}</button>\n                  </div>\n              </div>\n          </section>\n      </div>\n    "}]}],"members":{"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"steps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onCancelClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onComponentSubmitted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onFinishClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"footerComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","name":"WizardFooterComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver"}]}],"completeCurrentStep":[{"__symbolic":"method"}],"completeStep":[{"__symbolic":"method"}],"failCurrentStep":[{"__symbolic":"method"}],"failStep":[{"__symbolic":"method"}],"moveToNextStep":[{"__symbolic":"method"}],"moveToPreviousStep":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onBackClick":[{"__symbolic":"method"}],"onCancelClick":[{"__symbolic":"method"}],"onNextClick":[{"__symbolic":"method"}],"onStepClick":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"createComponent":[{"__symbolic":"method"}],"cleanComponent":[{"__symbolic":"method"}]}}}}]