import { ResourceCacheFind } from '../../../core';
import { ResourceService } from '../../service/resource.service';
export interface SvgIndexedData {
    name: string;
    lower: string;
    value: string;
}
/**
 * SVG resource class for CSS class.
 */
export declare class SvgResource implements ResourceCacheFind<string> {
    private svg;
    private svgInlineResource;
    /**
     * Build svg resources from SVG object, and register the resource service.
     *
     * @param resourceService the resource service.
     * @param svg the svg object generated by gulp-svg-code.
     */
    static buildRegister(resourceService: ResourceService, svg: any): void;
    /**
     * Initializes a new instance of the SvgResource class.
     *
     * @param svg the svg object generated by gulp-svg-code.
     */
    constructor(svg: any);
    /**
     * Find SVG string by id.
     *
     * @param id the identification of SVG. (id must be lower case)
     */
    find(id: string): string;
}
/**
 * SVG inline resource class for ram SVG insertion.
 */
export declare class SvgInlineResource implements ResourceCacheFind<string> {
    private svg;
    private lowerSvg;
    /**
     * Initializes a new instance of the SvgInlineResource class.
     *
     * @param svg the svg object generated by gulp-svg-code.
     */
    constructor(svg: any);
    /**
     * Find SVG string by id.
     *
     * @param id the identification of SVG. (id must be lower case)
     * @return string the Svg resource string.
     */
    find(id: string): string;
    /**
     * Find index data.
     *
     * @param id the identification of SVG.
     * @return SvgIndexedData the indexed data.
     */
    findIndex(id: string): SvgIndexedData;
    /**
     * Create lower case property version.
     *
     * @param svg the original svg data.
     * @return any the lower case version of svg.
     */
    private createLowercaseIndexing(svg);
    private nextPath(path, key);
}
